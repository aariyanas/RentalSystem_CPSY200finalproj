@page "/rentalspage"
@using CPSY200RentalSystem.domain
@using CPSY200RentalSystem.persistence

<main>
    <h3 id="mainTitle">Manage Rentals</h3>
    <button type="button" id="EQCAT1" @onclick="SwitchView" class="btn btn-primary btn-block">Create</button>
    <button type="button" id="EQCAT2" @onclick="SwitchView" class="btn btn-primary btn-block">Update</button>
    @if (menuButton == "updateRental")
    {
        <section id="container">
            <section id="search">
                <h5 id="SectionTitle">Search Rentals</h5>
                <p>Select type of search to be performed</p>
                <div class="radioContainer">
                    <form class="inputRadio">
                        <input type="radio" id="radioID" name="radioOptions" value="customerID" check="@IsSelected("customerID")" @onchange="SelectRadio" />
                        <label for="employeeID">Customer ID</label><br>
                        <input type="radio" id="radioLast" name="radioOptions" value="custLastName" check="@IsSelected("custLastName")" @onchange="SelectRadio" />
                        <label for="radioLast">Customer Last Name</label><br>
                        <input type="radio" id="radioAll" name="radioOptions" value="displayAll" check="@IsSelected("displayAll")" @onchange="SelectRadio" />
                        <label for="radioAll">Display All</label><br>
                    </form>
                </div>
                @if (radioSelection == "customerID")
                {
                    <div class="radioOptionContainer">
                        <form>
                            <label id="customerIDSection" for="employeeId">Enter Customer ID:</label>
                            <input type="text" id="employeeId" class="form-control" @bind="@custIdInput">
                        </form>
                        <button class="btn btn-primary" @onclick="() => DisplayRental(custIdInput, notUsed)">Search</button>
                        <br>
                        <p class="resultsHeader">Results:</p>
                        <select class="results" @onchange="SelectRental">
                            <option value="none" selected></option>
                            @foreach (Rental rental in foundRentals)
                            {
                                <option value="@rental.Rental_id">Rental ID: @rental.Rental_id -- Customer: @rental.Customer.First_name[0].@rental.Customer.Last_name -- @rental.Equipment.Name</option>
                            }
                        </select>
                    </div>
                }
                else if (radioSelection == "custLastName")
                {
                    <div class="radioOptionContainer">
                        <form>
                            <label for="employeeLast" id="customerIDSection">Enter Customer Last Name:</label>
                            <input type="text" id="employeeAll" class="form-control" @bind="@custLastInput">
                        </form>
                        <button class="btn btn-primary" @onclick="() => DisplayRental(notUsed, custLastInput)">Search</button>
                        <br>
                        <p class="resultsHeader">Results:</p>
                        <select class="results" @onchange="SelectRental">
                            <option value="none" selected></option>
                            @foreach (Rental rental in foundRentals)
                            {
                                <option value="@rental.Rental_id">Rental ID: @rental.Rental_id -- Customer: @rental.Customer.First_name[0].@rental.Customer.Last_name -- @rental.Equipment.Name</option>
                            }
                        </select>
                    </div>
                }
                else if (radioSelection == "displayAll")
                {
                    <div class="radioOptionContainer">
                        <p class="resultsHeader">Results:</p>
                        <select class="results" @onchange="SelectRental">
                            <option value="none" selected></option>
                            @foreach (Rental rental in rentalList)
                            {
                                <option value="@rental.Rental_id">Rental ID: @rental.Rental_id -- Customer: @rental.Customer.First_name[0].@rental.Customer.Last_name -- @rental.Equipment.Name</option>
                            }
                        </select>
                    </div>
                }
                else { }

            </section>
            <section id="addNedit">
                <h5 id="SectionTitle">Update Rentals</h5>
                <form>
                    <div>
                        <label for="inputID">Rental ID:</label>
                        <input id="inputID" type="text" class="form-control" placeholder="@rentalId" disabled />
                    </div>
                    <div>
                        <label for="creationDate">Date Created:</label>
                        <input id="creationDate" type="text" class="form-control" placeholder="@creationDate" disabled />
                    </div>
                    <div>
                        <label for="custId">Customer ID:</label>
                        <input id="custId" type="text" class="form-control" placeholder="@customerId" disabled />
                    </div>
                    <div>
                        <label for="rentalDate">Rental Date:</label>
                        <input id="rentalDate" type="date" class="form-control" @onchange="Date1Change" placeholder="@rentalDate" />

                    </div>
                    <div>
                        <label for="returnDate">Return Date:</label>
                        <input id="returnDate" type="date" class="form-control" @onchange="Date2Change" placeholder="@returnDate" />
                    </div>
                </form>
                <div class="buttonContainer">
                    <div class="saveNDeletebuttons">
                        <button type="submit" class="btn btn-primary" @onclick="SaveRental">Save</button>
                        <button type="submit" class="btn btn-primary" @onclick="DeleteRental">Delete</button>
                    </div>
                </div>
            </section>
        </section>
    }
    else
    {
        <section id="addNedit">
            <h5 id="SectionTitle">Rental Details</h5>
            
            <form>
                <div>
                    <label for="inputID">Rental ID:</label>
                    <select class="results" @onchange="SelectEquipment">
                        @foreach (Equipment equipment in equipmentList)
                        {
                            <option value="@equipment.Equipment_id">ID: @equipment.Equipment_id -- Name: @equipment.Name</option>
                        }
                    </select>
                    
                </div>
                <div>
                    <label for="creationDate">Current Date:</label>
                    <input id="creationDate" type="text" class="form-control" placeholder="@currentDate" disabled />
                </div>
                <div>
                    <label for="rentalDate">Rental Date:</label>
                    <input id="rentalDate" type="date" class="form-control" @onchange="Date1Change" placeholder="@rentalDate" />

                </div>
                <div>
                    <label for="returnDate">Return Date:</label>
                    <input id="returnDate" type="date" class="form-control" @onchange="Date2Change" placeholder="@returnDate" />

                </div>
                <div>
                    <label for="totalCost">Daily Rate:</label>
                    <input id="totalCost" type="number" class="form-control" placeholder="$@equipmentRate" disabled />
                </div>
            </form>
            <h5 id="SectionTitle">Customer Details</h5>
            <form class="customerDetailsInput">
                <div>
                    <label for="first">First Name:</label>
                    <input id="first" type="text" class="form-control" @bind="@firstName" />
                </div>
                <div>
                    <label for="last">Last Name:</label>
                    <input id="last" type="text" class="form-control" @bind="@lastName" />
                </div>
                <div>
                    <label for="phone">Phone Number:</label>
                    <input id="phone" type="tel" class="form-control" pattern="([0-9]{3}) [0-9]{3}-[0-9]{4}" @bind="@phoneNumber" />
                </div>
                <div>
                    <label for="email">Email:</label>
                    <input id="email" type="email" class="form-control" @bind="email" />
                </div>
            </form>
            <div class="createButton">
                <button type="submit" class="btn btn-primary" @onclick="CreateRental">Create Rental</button>
                @if (unavailableError == true)
                {
                    <p class="error">This item is not available. Please select a different item.</p>
                }
            </div>
        </section>
    }
</main>





@code {
    RentalSystem rentalSystem = new RentalSystem();
    List<Equipment> equipmentList = RentalSystem.ListOfEquipment;
    List<Customer> customerList = RentalSystem.Customers;
    List<Rental> rentalList = RentalSystem.Rentals;

    List<Rental> foundRentals = new List<Rental>(); // stores rentals that match the search

    // Page variables
    string menuButton = "createRental";
    string saleButton = "inactive";

    // Menu variables
    string radioSelection = "";
    string buttonSelection = "";
    string custIdInput;
    string custLastInput;
    string notUsed = "none";

    // Equipment Variables
    double equipmentRate;
    string selectedEquipmentId;
    Equipment selectedEquipement;
    bool unavailableError = false;

    // Rental Variables
    string rentalId = "";
    string creationDate;
    string currentDate = DateTime.Now.ToString("yyyy-MM-dd");
    string customerId = "";
    string rentalDate;
    string returnDate;
    string selectedRentalId;

    // Customer Variables
    string firstName;
    string lastName;
    string phoneNumber;
    string email;

    // Change Page  -- Probably going to need to fix this
    public void SwitchView()
    {
        if (menuButton == "updateRental")
        {
            StateHasChanged();
            menuButton = "createRental";
        }
        else if (menuButton == "createRental")
        {
            StateHasChanged();
            menuButton = "updateRental";
        }
        else { }
    }


    // Search Selection and Results
    void SelectRadio(ChangeEventArgs e)
    {
        radioSelection = e.Value.ToString();
        StateHasChanged();
    }

    bool IsSelected(string option)
    {
        return radioSelection == option;
    }

    void DisplayRental(string customerID, string lastName)
    {
        if (customerID != "none")
        {
            foundRentals = rentalList.Where(r => r.Customer.Customer_id == customerID).ToList();
        }
        else if (lastName != "none")
        {
            foundRentals = rentalList.Where(r => r.Customer.Last_name == lastName).ToList();
        }
        else { }
    }


    // Date Selection
    void Date1Change(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value?.ToString(), out var date))
        {
            rentalDate = date.ToString("yyyy-MM-dd");
        }
    }
    void Date2Change(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value?.ToString(), out var date))
        {
            returnDate = date.ToString("yyyy-MM-dd");
            if (rentalDate != null)
            {
                Equipment selectedEquipement = equipmentList.Where(e => e.Equipment_id == selectedEquipmentId).FirstOrDefault();
                int totalDays = (DateTime.Parse(returnDate) - DateTime.Parse(rentalDate)).Days + 1;
                double cost = totalDays * selectedEquipement.Daily_rate;
            }
        }
    }

    // Rental Selection
    void SelectRental(ChangeEventArgs e)
    {
        selectedRentalId = e.Value.ToString();
        if (selectedRentalId != null && selectedRentalId != "none")
        {
            Rental selectedRental = rentalList.Where(r => r.Rental_id == selectedRentalId).FirstOrDefault();
            rentalId = selectedRental.Rental_id;
            creationDate = selectedRental.Date;
            customerId = selectedRental.Customer.Customer_id;
            rentalDate = selectedRental.Rental_date;
            returnDate = selectedRental.Return_date;
        }
        else { }
    }

    // Equipment Selection
    void SelectEquipment(ChangeEventArgs e)
    {
        selectedEquipmentId = e.Value.ToString();
        if (selectedRentalId != null && selectedRentalId != "none")
        {
            Equipment selectedEquipement = equipmentList.Where(e => e.Equipment_id == selectedEquipmentId).FirstOrDefault();
            equipmentRate = selectedEquipement.Daily_rate;
        }
        else { }
    }


    // Rental Creation
    void CreateRental()
    {
        Equipment selectedEquipement = equipmentList.Where(e => e.Equipment_id == selectedEquipmentId).FirstOrDefault();
        if (selectedRentalId != null && selectedRentalId != "none")
        {
            if (RentalSystem.CheckAvailabilty(selectedEquipement))
            {
                int totalDays = (DateTime.Parse(returnDate) - DateTime.Parse(rentalDate)).Days + 1;
                double cost = totalDays * selectedEquipement.Daily_rate;
                Customer customer = RentalSystem.CheckForCustomer(firstName, lastName, phoneNumber, email);
                RentalSystem.CreateRental(currentDate, customer, selectedEquipement, rentalDate, returnDate, cost);

                FileController.Save();
                Application.Current.MainPage.DisplayAlert("Rental Created", $"Customer ID: {customer.Customer_id}\nName: {customer.First_name} {customer.Last_name}\nEquipment: {selectedEquipement.Name} - {selectedEquipement.Equipment_id}\nReturn By: {returnDate}\n\nTOTAL: ${cost}", "OK");
            }
            else
            {
                unavailableError = true;
            }
        }
        else {}
        
    }

    // Rental Creation or Update
    void SaveRental()
    {
        if (selectedRentalId != null && selectedRentalId != "none")
        {
            Rental selectedRental = rentalList.Where(r => r.Rental_id == selectedRentalId).FirstOrDefault();
            if (selectedRental != null)
            {
                selectedRental.Rental_id = rentalId;
                selectedRental.Date = creationDate;
                selectedRental.Customer.Customer_id = customerId;
                selectedRental.Rental_date = rentalDate;
                selectedRental.Return_date = returnDate;
                int totalDays = (DateTime.Parse(returnDate) - DateTime.Parse(rentalDate)).Days + 1;
                selectedRental.Cost = totalDays * selectedRental.Equipment.Daily_rate;
                FileController.Save();
                Application.Current.MainPage.DisplayAlert("Rental Saved", $"Customer ID: {selectedRental.Customer.Customer_id}\nName: {selectedRental.Customer.First_name} {selectedRental.Customer.Last_name}\nEquipment: {selectedRental.Equipment.Name} - {selectedRental.Equipment.Equipment_id}\nReturn By: {selectedRental.Return_date}\n\nTOTAL: ${selectedRental.Cost}", "OK");
            }
            else { }
        }
        else { }
    }

    // Rental Deletion
    void DeleteRental()
    {
        if (selectedRentalId != null && selectedRentalId != "none")
        {
            Rental selectedRental = rentalList.Where(r => r.Rental_id == selectedRentalId).FirstOrDefault();
            if (selectedRental != null)
            {
                rentalList.Remove(selectedRental);
                string equipmentNotUsed = null;
                string customerNotUsed = null;
                FileController.Delete(equipmentNotUsed, customerNotUsed, selectedRental.Rental_id);
                FileController.Save();
                Application.Current.MainPage.DisplayAlert("Rental Deleted", "Press OK to Continue", "OK");
            }
            else { }
        }
        else { }
    }
}
    
